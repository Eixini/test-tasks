// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VKprofileTaskAPI.DbContexts;

#nullable disable

namespace VKprofileTaskAPI.Migrations
{
    [DbContext(typeof(UsersDbContext))]
    partial class UsersDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VKprofileTaskAPI.Models.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("UserId"));

                    b.Property<DateTime>("CreatedData")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("CurrentUserGroupUserGroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("CurrentUserStateUserStateId")
                        .HasColumnType("bigint");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.HasIndex("CurrentUserGroupUserGroupId");

                    b.HasIndex("CurrentUserStateUserStateId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VKprofileTaskAPI.Models.UserGroup", b =>
                {
                    b.Property<long>("UserGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("UserGroupId"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("GroupId")
                        .HasColumnType("integer");

                    b.HasKey("UserGroupId");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("VKprofileTaskAPI.Models.UserGroupVariations", b =>
                {
                    b.Property<int?>("CodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("CodeId"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CodeId");

                    b.ToTable("UserVariations");

                    b.HasData(
                        new
                        {
                            CodeId = 1,
                            Type = "Admin"
                        },
                        new
                        {
                            CodeId = 2,
                            Type = "User"
                        });
                });

            modelBuilder.Entity("VKprofileTaskAPI.Models.UserState", b =>
                {
                    b.Property<long>("UserStateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("UserStateId"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("StateId")
                        .HasColumnType("integer");

                    b.HasKey("UserStateId");

                    b.ToTable("UserStates");
                });

            modelBuilder.Entity("VKprofileTaskAPI.Models.UserStateVariations", b =>
                {
                    b.Property<int>("CodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CodeId"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CodeId");

                    b.ToTable("UserStatesVariations");

                    b.HasData(
                        new
                        {
                            CodeId = 1,
                            Type = "Active"
                        },
                        new
                        {
                            CodeId = 2,
                            Type = "Blocked"
                        });
                });

            modelBuilder.Entity("VKprofileTaskAPI.Models.User", b =>
                {
                    b.HasOne("VKprofileTaskAPI.Models.UserGroup", "CurrentUserGroup")
                        .WithMany()
                        .HasForeignKey("CurrentUserGroupUserGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VKprofileTaskAPI.Models.UserState", "CurrentUserState")
                        .WithMany()
                        .HasForeignKey("CurrentUserStateUserStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentUserGroup");

                    b.Navigation("CurrentUserState");
                });
#pragma warning restore 612, 618
        }
    }
}
